{"ast":null,"code":"var _jsxFileName = \"D:\\\\PythonProjects\\\\cyber-threat-analyzer\\\\frontend\\\\src\\\\components\\\\RiskBreakdownChart.js\";\nimport React from 'react';\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\nconst RiskBreakdownChart = ({\n  systemStats,\n  scanResults,\n  threatData\n}) => {\n  // Calculate dynamic risk values for each category\n  const calculateRiskBreakdown = () => {\n    const baseValues = {\n      SSL: 3 + Math.floor(Math.random() * 5),\n      'Security Headers': 2 + Math.floor(Math.random() * 6),\n      Malware: 1 + Math.floor(Math.random() * 7),\n      'Open Ports': 3 + Math.floor(Math.random() * 5),\n      'Content-Security-Policy': 2 + Math.floor(Math.random() * 6)\n    };\n\n    // Adjust based on system stats\n    if (systemStats) {\n      var _systemStats$system_h;\n      // If many threats are blocked, increase malware risk\n      if (systemStats.threats_blocked > 50) {\n        baseValues.Malware = Math.min(10, baseValues.Malware + 2);\n      }\n\n      // If active threats exist, increase overall risk\n      if (systemStats.active_threats > 0) {\n        baseValues.SSL = Math.min(10, baseValues.SSL + 1);\n        baseValues.Malware = Math.min(10, baseValues.Malware + 2);\n        baseValues['Open Ports'] = Math.min(10, baseValues['Open Ports'] + 1);\n      }\n\n      // System health affects security measures\n      const systemHealth = (_systemStats$system_h = systemStats.system_health) === null || _systemStats$system_h === void 0 ? void 0 : _systemStats$system_h.toLowerCase();\n      if (systemHealth === 'critical' || systemHealth === 'poor') {\n        Object.keys(baseValues).forEach(key => {\n          baseValues[key] = Math.min(10, baseValues[key] + 1);\n        });\n      }\n    }\n\n    // Adjust based on scan results\n    if (scanResults && scanResults.threats_found > 0) {\n      baseValues.Malware = Math.min(10, baseValues.Malware + 3);\n    }\n    return Object.values(baseValues);\n  };\n  const riskValues = calculateRiskBreakdown();\n  const data = {\n    labels: ['SSL', 'Security Headers', 'Malware', 'Open Ports', 'Content-Security-Policy'],\n    datasets: [{\n      data: riskValues,\n      backgroundColor: 'rgba(255, 68, 68, 0.2)',\n      borderColor: '#ff4444',\n      borderWidth: 2,\n      pointBackgroundColor: '#ff4444',\n      pointBorderColor: '#ff4444',\n      pointRadius: 4\n    }]\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      }\n    },\n    scales: {\n      r: {\n        angleLines: {\n          color: '#444'\n        },\n        grid: {\n          color: '#444'\n        },\n        pointLabels: {\n          color: '#888',\n          font: {\n            size: 11\n          }\n        },\n        ticks: {\n          display: false\n        },\n        min: 0,\n        max: 10\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark-card p-6 rounded-xl border border-red-primary/30 relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-gradient-to-br from-red-primary/5 to-transparent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-4 text-white\",\n        children: \"Risk Breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-64\",\n        children: /*#__PURE__*/_jsxDEV(Radar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_c = RiskBreakdownChart;\nexport default RiskBreakdownChart;\nvar _c;\n$RefreshReg$(_c, \"RiskBreakdownChart\");","map":{"version":3,"names":["React","Chart","ChartJS","RadialLinearScale","PointElement","LineElement","Filler","Tooltip","Legend","Radar","jsxDEV","_jsxDEV","register","RiskBreakdownChart","systemStats","scanResults","threatData","calculateRiskBreakdown","baseValues","SSL","Math","floor","random","Malware","_systemStats$system_h","threats_blocked","min","active_threats","systemHealth","system_health","toLowerCase","Object","keys","forEach","key","threats_found","values","riskValues","data","labels","datasets","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointRadius","options","responsive","maintainAspectRatio","plugins","legend","display","scales","r","angleLines","color","grid","pointLabels","font","size","ticks","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/PythonProjects/cyber-threat-analyzer/frontend/src/components/RiskBreakdownChart.js"],"sourcesContent":["import React from 'react';\nimport { Chart as ChartJS, RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend } from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\n\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\n\nconst RiskBreakdownChart = ({ systemStats, scanResults, threatData }) => {\n  // Calculate dynamic risk values for each category\n  const calculateRiskBreakdown = () => {\n    const baseValues = {\n      SSL: 3 + Math.floor(Math.random() * 5),\n      'Security Headers': 2 + Math.floor(Math.random() * 6),\n      Malware: 1 + Math.floor(Math.random() * 7),\n      'Open Ports': 3 + Math.floor(Math.random() * 5),\n      'Content-Security-Policy': 2 + Math.floor(Math.random() * 6)\n    };\n\n    // Adjust based on system stats\n    if (systemStats) {\n      // If many threats are blocked, increase malware risk\n      if (systemStats.threats_blocked > 50) {\n        baseValues.Malware = Math.min(10, baseValues.Malware + 2);\n      }\n      \n      // If active threats exist, increase overall risk\n      if (systemStats.active_threats > 0) {\n        baseValues.SSL = Math.min(10, baseValues.SSL + 1);\n        baseValues.Malware = Math.min(10, baseValues.Malware + 2);\n        baseValues['Open Ports'] = Math.min(10, baseValues['Open Ports'] + 1);\n      }\n      \n      // System health affects security measures\n      const systemHealth = systemStats.system_health?.toLowerCase();\n      if (systemHealth === 'critical' || systemHealth === 'poor') {\n        Object.keys(baseValues).forEach(key => {\n          baseValues[key] = Math.min(10, baseValues[key] + 1);\n        });\n      }\n    }\n    \n    // Adjust based on scan results\n    if (scanResults && scanResults.threats_found > 0) {\n      baseValues.Malware = Math.min(10, baseValues.Malware + 3);\n    }\n    \n    return Object.values(baseValues);\n  };\n\n  const riskValues = calculateRiskBreakdown();\n\n  const data = {\n    labels: ['SSL', 'Security Headers', 'Malware', 'Open Ports', 'Content-Security-Policy'],\n    datasets: [\n      {\n        data: riskValues,\n        backgroundColor: 'rgba(255, 68, 68, 0.2)',\n        borderColor: '#ff4444',\n        borderWidth: 2,\n        pointBackgroundColor: '#ff4444',\n        pointBorderColor: '#ff4444',\n        pointRadius: 4,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      r: {\n        angleLines: {\n          color: '#444',\n        },\n        grid: {\n          color: '#444',\n        },\n        pointLabels: {\n          color: '#888',\n          font: {\n            size: 11,\n          },\n        },\n        ticks: {\n          display: false,\n        },\n        min: 0,\n        max: 10,\n      },\n    },\n  };\n\n  return (\n    <div className=\"bg-dark-card p-6 rounded-xl border border-red-primary/30 relative overflow-hidden\">\n      <div className=\"absolute inset-0 bg-gradient-to-br from-red-primary/5 to-transparent\"></div>\n      <div className=\"relative\">\n        <h3 className=\"text-lg font-semibold mb-4 text-white\">Risk Breakdown</h3>\n        <div className=\"h-64\">\n          <Radar data={data} options={options} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RiskBreakdownChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,WAAW,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAClH,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExCT,OAAO,CAACU,QAAQ,CAACT,iBAAiB,EAAEC,YAAY,EAAEC,WAAW,EAAEC,MAAM,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEvF,MAAMK,kBAAkB,GAAGA,CAAC;EAAEC,WAAW;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAK;EACvE;EACA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,UAAU,GAAG;MACjBC,GAAG,EAAE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MACtC,kBAAkB,EAAE,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MACrDC,OAAO,EAAE,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1C,YAAY,EAAE,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;MAC/C,yBAAyB,EAAE,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC;IAC7D,CAAC;;IAED;IACA,IAAIR,WAAW,EAAE;MAAA,IAAAU,qBAAA;MACf;MACA,IAAIV,WAAW,CAACW,eAAe,GAAG,EAAE,EAAE;QACpCP,UAAU,CAACK,OAAO,GAAGH,IAAI,CAACM,GAAG,CAAC,EAAE,EAAER,UAAU,CAACK,OAAO,GAAG,CAAC,CAAC;MAC3D;;MAEA;MACA,IAAIT,WAAW,CAACa,cAAc,GAAG,CAAC,EAAE;QAClCT,UAAU,CAACC,GAAG,GAAGC,IAAI,CAACM,GAAG,CAAC,EAAE,EAAER,UAAU,CAACC,GAAG,GAAG,CAAC,CAAC;QACjDD,UAAU,CAACK,OAAO,GAAGH,IAAI,CAACM,GAAG,CAAC,EAAE,EAAER,UAAU,CAACK,OAAO,GAAG,CAAC,CAAC;QACzDL,UAAU,CAAC,YAAY,CAAC,GAAGE,IAAI,CAACM,GAAG,CAAC,EAAE,EAAER,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;MACvE;;MAEA;MACA,MAAMU,YAAY,IAAAJ,qBAAA,GAAGV,WAAW,CAACe,aAAa,cAAAL,qBAAA,uBAAzBA,qBAAA,CAA2BM,WAAW,CAAC,CAAC;MAC7D,IAAIF,YAAY,KAAK,UAAU,IAAIA,YAAY,KAAK,MAAM,EAAE;QAC1DG,MAAM,CAACC,IAAI,CAACd,UAAU,CAAC,CAACe,OAAO,CAACC,GAAG,IAAI;UACrChB,UAAU,CAACgB,GAAG,CAAC,GAAGd,IAAI,CAACM,GAAG,CAAC,EAAE,EAAER,UAAU,CAACgB,GAAG,CAAC,GAAG,CAAC,CAAC;QACrD,CAAC,CAAC;MACJ;IACF;;IAEA;IACA,IAAInB,WAAW,IAAIA,WAAW,CAACoB,aAAa,GAAG,CAAC,EAAE;MAChDjB,UAAU,CAACK,OAAO,GAAGH,IAAI,CAACM,GAAG,CAAC,EAAE,EAAER,UAAU,CAACK,OAAO,GAAG,CAAC,CAAC;IAC3D;IAEA,OAAOQ,MAAM,CAACK,MAAM,CAAClB,UAAU,CAAC;EAClC,CAAC;EAED,MAAMmB,UAAU,GAAGpB,sBAAsB,CAAC,CAAC;EAE3C,MAAMqB,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,KAAK,EAAE,kBAAkB,EAAE,SAAS,EAAE,YAAY,EAAE,yBAAyB,CAAC;IACvFC,QAAQ,EAAE,CACR;MACEF,IAAI,EAAED,UAAU;MAChBI,eAAe,EAAE,wBAAwB;MACzCC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE,CAAC;MACdC,oBAAoB,EAAE,SAAS;MAC/BC,gBAAgB,EAAE,SAAS;MAC3BC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,UAAU,EAAE;UACVC,KAAK,EAAE;QACT,CAAC;QACDC,IAAI,EAAE;UACJD,KAAK,EAAE;QACT,CAAC;QACDE,WAAW,EAAE;UACXF,KAAK,EAAE,MAAM;UACbG,IAAI,EAAE;YACJC,IAAI,EAAE;UACR;QACF,CAAC;QACDC,KAAK,EAAE;UACLT,OAAO,EAAE;QACX,CAAC;QACD1B,GAAG,EAAE,CAAC;QACNoC,GAAG,EAAE;MACP;IACF;EACF,CAAC;EAED,oBACEnD,OAAA;IAAKoD,SAAS,EAAC,mFAAmF;IAAAC,QAAA,gBAChGrD,OAAA;MAAKoD,SAAS,EAAC;IAAsE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5FzD,OAAA;MAAKoD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBrD,OAAA;QAAIoD,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzEzD,OAAA;QAAKoD,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBrD,OAAA,CAACF,KAAK;UAAC6B,IAAI,EAAEA,IAAK;UAACS,OAAO,EAAEA;QAAQ;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GArGIxD,kBAAkB;AAuGxB,eAAeA,kBAAkB;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}